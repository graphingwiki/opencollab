#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    @copyright: 2008 Marko Laakso, Mika Sepp√§nen, Lari Huttunen
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""
import os, re, sys, gzip, string, time, optparse, socket
from opencollab.wiki import CLIWiki, WikiFailure
from opencollab.meta import Metas
from opencollab.util.config import parseOptions
from opencollab.util.wiki import getPages
from opencollab.util.file import downloadFile

def decompressFile(path, file):
    ifile = os.path.join(path, file)
    ofile = os.path.join(path, "main.log")
    try:
        gf = gzip.open(ifile, "rb")
    except IOError:
        error = "Couldn't open " + ifile + " for reading."
        sys.exit(error) 
    try:
        df = open(ofile, "wb")
    except IOError:
        error = "Couldn't open " + ofile + " for writing."
        sys.exit(error) 
    try:
        df.writelines(gf)
    except IOError:
        error = "Write to " + ofile + " failed."
        sys.exit(error) 
    df.close()
    gf.close()

def create_dir(results_dir, suite_name, ts):
    ds = "%d" % time.time()
    ds = ts.single(ds)
    date, times = ds.split()
    mod_time = re.sub(':', '-', times)
    dname = date + '-' + mod_time
    new_dir = os.path.join(results_dir, suite_name.single(), dname)
    if not os.path.exists(new_dir):
        try:
            os.makedirs(new_dir)
        except os.error:
            error = "Couldn't create: ", new_dir
            sys.exit(error)
    return new_dir

def main():
    parser = optparse.OptionParser()
    parser.set_usage("%prog [options] <results-directory>")
    ops = {}
    sect = "defensics-downloader" 
    ops = parseOptions(parser, sect, search=True)
    url = ops["creds"]["url"]
    verbose = ops[sect]["verbose"]
    search_string = ops[sect]["search"]
    if search_string is None:
        parser.error("You need to specify a MetaTable search string. Use -h for help.")
    args = ops[sect]["args"]
    pages = Metas()
    if len(args) == 1:
        results_dir = args.pop()
    else:
        parser.error("You need to specify a testrun directory.")
    if verbose:
        print "Authenticating to: " + repr(url)
    while True:
        try:
            collab = CLIWiki(**ops['creds'])
        except WikiFailure:
            print "ERROR: Authentication failed."
        except (UnicodeError, socket.gaierror):
            sys.exit("ERROR: Not a valid URL.")
        else:
            break
    if verbose:
        print "NOTE: Getting pages with:", search_string, "\nfrom", url
    pages.update(getPages(collab, search_string))
    if verbose:
        print "NOTE: Downloading testrun results to:", results_dir
    for page in pages:
        if pages[page]["Summary XML"]:
            suite_name = pages[page]["Test suite name"]
            ts = pages[page]["Test run started"]
            dpath = create_dir(results_dir, suite_name, ts)
            if verbose:
                print "NOTE: Download destination is", dpath
            attachments = collab.listAttachments(page)
            for attachment in attachments:
                try:
                    downloadFile(collab, page, attachment, dpath, verbose)
                except OSError:
                    sys.exit("ERROR: couldn't download %s" % attachment)
            if verbose:
                print "NOTE: Decompressing main.log.gz"
            decompressFile(dpath, "main.log.gz")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Script interrupted via CTRL-C."
