#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    @copyright: 2008 Lari Huttunen
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""
import optparse
from opencollab.util.config import parse_config
from opencollab.wiki import CLIWiki
from opencollab.meta import Metas
from opencollab.util.wiki import importMetas
from opencollab.util.emailutils import imapsAuth, getMessagesAndUpload, parseMetaData, parseHTML, lexifyTokens, parseURLs

def main():
    parser = optparse.OptionParser()
    parser.add_option( "-c", "--config",
        action="store",
        type="string", dest="config",
        metavar="CONFIG",
        help="CONFIG  file path.")
    parser.add_option( "-e", "--imaps-user",
        action="store",
        type="string", dest="imaps_user",
        metavar="IMAPS-USERNAME",
        help="IMAPS-USERNAME.")
    parser.add_option( "-i", "--imaps-server",
        action="store",
        type="string", dest="imaps_server",
        metavar="IMAPS-SERVER",
        help="IMAPS-SERVER name or IP address.")
    parser.add_option( "-t", "--wiki-template",
        action="store",
        type="string", dest="wiki_template",
        metavar="TEMPLATE",
        help="Wiki TEMPLATE.")
    parser.add_option( "-u", "--url",
        action="store",
        type="string", dest="url",
        metavar="COLLAB-URL",
        help="COLLAB-URL to connect to.")
    parser.add_option("-v",
        action="store_true", dest="verbose", default=False,
        help="Enable verbose output." )
    parser.set_usage("%prog [options]")
    options, args = parser.parse_args()
    iopts={}
    metas = Metas()
    if options.config:
        iopts = parse_config(options.config, "creds", "spam")
    if options.imaps_server:
        imaps_server = options.imaps_server
    elif options.config and "imaps-server" in iopts["spam"]:
        imaps_server = iopts["spam"]["imaps-server"]
    else:
        imaps_server = None
    if options.imaps_user:
        imaps_user = options.imaps_user
    elif options.config and "imaps-user" in iopts["spam"]:
        imaps_user = iopts["spam"]["imaps-user"]
    else:
        imaps_user = None
    if options.config and "imaps-pass" in iopts["spam"]:
        imaps_pass = iopts["spam"]["imaps-pass"]
    else:
        imaps_pass = None
    if options.wiki_template:
        template = options.wiki_template
    elif options.config and "wiki-template" in iopts["spam"]:
        template = iopts["spam"]["wiki-template"]
    else:
        template = "SpamTemplate"
    if options.verbose:
        print "Getting collab credentials."
    if options.url:
        url = options.url
        collab = CLIWiki(url)
    elif options.config and "url" in iopts["creds"]:
        url = iopts["creds"]["url"]
        collab = CLIWiki(url, config=options.config)
    else:
        parser.error("Collab URL needs to be specified. Use -h for help.")
    if imaps_server is not None and imaps_user is not None:
        if options.verbose:
            print "Reading new spam messages from:", imaps_server, imaps_user, "INBOX"
        mailbox = imapsAuth(imaps_server, imaps_user, imaps_pass)
        if options.verbose:
            print "Uploading message files to collab."
        metas.update(getMessagesAndUpload(mailbox, collab))
        metas.update(parseMetaData(metas))
        metas.update(parseHTML(metas))
        metas.update(lexifyTokens(metas))
        metas.update(parseURLs(metas))
        for page in metas:
            del metas[page]['msg']
            del metas[page]['text']
            del metas[page]['html']
    else:
        parser.error("You need to specify IMAPS-SERVER and IMAPS-USER.")
    importMetas(collab, metas, template, options.verbose)

if __name__ == "__main__":
#    try:
    main()
#    except KeyboardInterrupt:
#        print "Script interrupted via CTRL-C."
