#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    @copyright: 2008 Lari Huttunen
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""

import os
import sys
import string
import optparse
from opencollab.util.config import parse_config
from opencollab.util.file import hashFile, uploadFile
from opencollab.wiki import CLIWiki, WikiFailure
from opencollab.meta import Metas

def import_metas( collab, metas, template, verbose ):
    for page, pmeta in metas.iteritems():
        pmeta["category"].add("CategoryNmapRun")
        status = collab.setMeta( page, pmeta, template=template, replace=True )
        if verbose:
            print status

def parse_xml(file, nmaprun_page):
    xml_doc = et.parse(file)

def main():
    parser = optparse.OptionParser()
    parser.add_option( "-c", "--config",
        action="store", type="string", 
        dest="config",
        metavar = "CONFIG",
        help="CONFIG file path.")
    parser.add_option( "-u", "--url",
        action="store", type="string", 
        dest="url",
        metavar = "COLLAB-URL",
        help="COLLAB-URL")
    parser.add_option( "-t", "--wiki-template",
        action="store", type="string", 
        dest="template",
        metavar = "TEMPLATE",
        help="Wiki TEMPLATE, e.g. NmapTemplate.")
    parser.add_option("-v",
        action="store_true", dest="verbose", default=False,
        help="Enable verbose output." )
    parser.set_usage("%prog [options] NMAP-XML-FILES")
    options, args = parser.parse_args()
    iopts={}
    nmap_file=[]
    page_metas = Metas()
    iopts["creds"] = None
    iopts["nmap"] = None
    if len(args) < 1:
        parser.error("At least one XML input file path needs to be specified.")
    if options.config:
        iopts = parse_config(options.config, "creds", "nmap")
    if options.template:
        directory = options.template
    elif options.config and "template" in iopts["nmap"]:
        template = iopts["nmap"]["template"]
    else:
        template = None
    if options.url:
        url = options.url
        collab = CLIWiki(url)
    elif options.config and "url" in iopts["creds"]:
        collab = CLIWiki(url, config=options.config)
    else:
        parser.error("Collab URL needs to be specified.")
    if options.verbose:
        print "Processing input files."
    for arg in args:
        nmap_files.append(arg)
    for file in nmap_files:
        xml_page = hash_file(file, options.verbose)
        if options.verbose:
            print "Parsing", file
        page_metas = parse_xml(file, xml_page)
        if options.verbose:
            print "Importing metas to", url
        import_metas(collab, page_metas, template, options.verbose)
        if options.verbose:
            print "Uploading", file, "to", xml_page
        uploadFile(collab, xml_page, file)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Script interrupted via CTRL-C."

