#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    @copyright: 2008 by Joachim Viide, Pekka Pietikäinen, Mika Seppänen  
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""
import os, sys, optparse, socket
from urllib import quote
from opencollab.wiki import CLIWiki, WikiFailure
from opencollab.meta import Meta
from opencollab.util.config import parseOptions
from opencollab.util.file import uploadFile

def main():
    parser = optparse.OptionParser()
    parser.add_option("-d", "--delete", action="store_true",
        dest="delete", default=False, 
        help="Delete attachments, which do not exist at the source.")
    parser.add_option("-n", "--dry-run", action="store_true",
        dest="dryrun", default=False, help="Simulate the upload and possible delete actions." )
    parser.add_option("-p", "--page",
        dest="page", default=None, metavar="PAGE",
        help="Upload the file(s) to PAGE.")
    parser.set_usage("%prog [options] 1..N optional input directories")
    ops = {}
    sect = "uploader"
    ops = parseOptions(parser, sect, template=True)
    url = ops["creds"]["url"]
    delete = ops[sect]["delete"]
    dryrun = ops[sect]["dryrun"]
    page = ops[sect]["page"]
    verbose = ops[sect]["verbose"]
    if page is None:
        parser.error("Collab page to upload to needs to be specified. Use -h for help.")
    args = ops[sect]["args"]
    if len(args) < 1:
        parser.error("You need to specify 1..N positional input directories. Use -h for help.")
    if verbose:
        print "Authenticating to: " + repr(url)
    while True:
        try:
            collab = CLIWiki(**ops['creds'])
        except WikiFailure:
            print "ERROR: Authentication failed."
        except (UnicodeError, socket.gaierror):
            sys.exit("ERROR: Not a valid URL.")
        else:
            break
    filelist = list()
    wikiflist = list()
    for path in args:
        if os.path.isfile(path):
            wikiname = quote(path, safe="")
            filelist.append((path, wikiname))
            wikiflist.append(wikiname)
        else:
            for root, dirs, files in os.walk(path):
                for file in files:
                    filename = os.path.join(root, file)
                    wikiname = filename[len(os.path.dirname(path)):].lstrip("/")
                    wikiname = quote(wikiname, safe="")
                    filelist.append((filename, wikiname))
                    wikiflist.append(wikiname)
    total = len(filelist)
    n = 1
    if delete:
        destfiles = collab.listAttachments(page)
        d = set(destfiles)
        s = set(wikiflist)
        dead = d - s
        if verbose and dryrun:
            print "NOTE: Dry running, nothing will really be deleted from", page
        for f in dead:
            if verbose:
                print "NOTE: deleting", page + "/" + f
            if not dryrun:
                collab.deleteAttachment(page, f)
    if dryrun and verbose:
        print "NOTE: Dry running, nothing will be uploaded for real to", page
    for filename, wikiname in filelist:
        if verbose:
            sys.stdout.write("NOTE: %d/%d uploading %s as %s\n" % (n, total, filename, wikiname)) 
        if not dryrun:
            uploadFile(collab, page, filename, wikiname, verbose)
        n += 1 

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Script interrupted via CTRL-C."

