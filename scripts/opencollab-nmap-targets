#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    @copyright: 2010-2012 Juhani Eronen
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""
import sys
import socket
import optparse
from opencollab.util.wiki import getPages
from opencollab.util.config import parseOptions
from opencollab.wiki import CLIWiki, WikiFailure


def main():
    parser = optparse.OptionParser()
    parser.set_usage("%prog [options] NMAP-XML-FILES")
    ops = {}
    sect = "nmap-targets"
    ops = parseOptions(parser, sect, template=True, category=True)
    x509 = ops[sect]["x509"]
    x509_ca_file = ops[sect]["x509_ca_file"]
    verbose = ops[sect]["verbose"]
    args = ops[sect]["args"]
    while True:
        try:
            collab = CLIWiki(ssl_verify_cert=x509, ssl_ca_certs=x509_ca_file, **ops['creds'])
        except WikiFailure:
            print "ERROR: Authentication failed."
        except (UnicodeError, socket.gaierror):
            sys.exit("ERROR: Not a valid URL.")
        else:
            break
    if verbose:
        print "NOTE: Grabbing pages from collab."

    # Crappy regexp, I know
    if args:
        ipv4_regexp = '/%s/' % args[0].strip('/')
    else:
        ipv4_regexp = "/\d\d?\d?\./"

    try:
        all = getPages(collab, ipv4_regexp)
        result = list()
        # Verify that they are all ipv4 addresses
        for ip in all:
            try:
                socket.inet_aton(ip)
            except:
                continue
            # TODO: prune ip addresses to ranges etc
            result.append(ip)
        print 'Paste this to your nmap script: -oA resultfile', (' '.join(result))
        print 'Then give the resulting xml file to opencollab-nmap-uploader'
    except (IOError, TypeError, RuntimeError), msg:
        sys.exit(msg)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Script interrupted via CTRL-C."
