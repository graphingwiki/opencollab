#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
    @copyright: 2008 by Jani Kenttälä
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""


import os
import sys
import optparse
from opencollab.wiki import CLIWiki, WikiFailure
from opencollab.util.config import parse_config
from urllib import quote

def main():
    parser = optparse.OptionParser()
    parser.add_option( "-c", "--config",
        action="store",
        type="string", dest="config",
        metavar = "CONFIG",
        help="CONFIG file path.")
    parser.add_option( "-s", "--wiki-search-string",
        action="store",
        type="string", dest="search_string",
        metavar = "SEARCH-STRING",
        help="SEARCH-STRING for getMeta().")
    parser.add_option("-n", "--dry-run",
                      dest="dryrun",
                      action="store_true",
                      default=False,
                      help="show what would have been deleted")
    options, args = parser.parse_args()
    iopts = {}
    if options.config:
        iopts = parse_config(options.config, "creds", "delete")
        if "url" in iopts["creds"]:
            url = iopts["creds"]["url"]
        else:
            parser.error("COLLABURL needs to be specified.")
        collab = CLIWiki(url, config=options.config)
    elif len(args) != 1:
        parser.error("COLLABURL needs to be specified.")
    else:
        url=args[0]
        collab = CLIWiki(url)
    if options.search_string:
        search_string = options.search_string
    elif options.config and "search-string" in iopts["delete"]:
        search_string = iopts["delete"]["search-string"]
    else:
        search_string = None
    if search_string is None:
        parser.error("Search string needs to be specified.")
    metas = collab.getMeta(search_string)
    for k,v in metas.iteritems():
        print "Deleting %r..." % (k),
        if not options.dryrun:
            try:
                collab.deletePage(k)
                print "[ok].",
            except WikiFailure, (strerror):
                print "[failed]: %s"  % (strerror),
        print
    print
    
if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Script interrupted via CTRL-C."

