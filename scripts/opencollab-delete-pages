#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
    @copyright: 2008 by Jani Kenttälä
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""


import os,sys,re,optparse
from opencollab.wiki import CLIWiki, WikiFailure
from opencollab.util.config import parseConfig
from urllib import quote

def main():
    parser = optparse.OptionParser()
    parser.add_option( "-c", "--config",
        action="store",
        type="string", dest="config",
        metavar = "CONFIG",
        help="CONFIG file path.")
    parser.add_option( "-s", "--wiki-search-string",
        action="store",
        type="string", dest="search_string",
        metavar = "SEARCH-STRING",
        help="SEARCH-STRING for getMeta().")
    parser.add_option("-n", "--dry-run",
        dest="dryrun",
        action="store_true",
        default=False,
        help="show what would have been deleted")
    parser.add_option("-u", "--url",
        action="store", type="string",
        dest="url",
        metavar="COLLAB-URL",
        help="COLLAB-URL to connect to.")

    parser.add_option("-U", "--username",
        action="store", type="string",
        dest="username",
        metavar="USERNAME",
        help="USERNAME to authenticate as.")

    options, args = parser.parse_args()
    iopts = {}
    columns = re.compile('\|\|.*\|\|')
    if options.config:
        iopts = parseConfig(options.config, "creds", "delete")
    if options.search_string:
        search_string = options.search_string
    elif options.config and "search-string" in iopts["delete"]:
        search_string = iopts["delete"]["search-string"]
    else:
        parser.error("Search string needs to be specified. Use -h for help.")
    if options.url:
        url = options.url
        collab = CLIWiki(url)
    elif options.config and "url" in iopts["creds"]:
        url = iopts["creds"]["url"]
        collab = CLIWiki(url, config=options.config)
    else:
        parser.error("Collab needs to be specified. Use -h for help.")

    if options.username:
        collab.authenticate(username=options.username)

    if not columns.findall(search_string):
        search_string += ",||||"
    metas = collab.getMeta(search_string)
    for page in metas:
        print "Deleting %r..." % (page),
        if not options.dryrun:
            try:
                collab.deletePage(page)
                print "[ok].",
            except WikiFailure, (strerror):
                print "[failed]: %s"  % (strerror),
        print
    print

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Script interrupted via CTRL-C."

