#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
    The purpose if this script is to wautomate simple identity uploads
    with an input data set of one identity per page. Moreover, the
    identity instantiation should be done through templating, e.g.
    IdentityTemplate. At present the input identities are assumed
    to be email addresses.

    @copyright: 2008 Lari Huttunen
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>

"""
import sys
import os
import optparse
from opencollab.util.config import parse_config
from opencollab.wiki import CLIWiki
from opencollab.meta import Meta, Metas
from opencollab.util.regexp import utctimestamp

def parse_input_file(page_metas, path):
    try:
        file = open(path, "r")
        lines = file.readlines()
        file.close()
    except IOError:
        error = "Input file: " + file + " doesn't exist."
        sys.exit(error)
    statinfo = os.stat(path)
    epoch = statinfo.st_ctime
    epoch = utctimestamp(epoch)
    for line in lines:
        line = line.strip()
        local, domain = line.split('@') 
        title = local.title()
        id = title.split('.')
        sname = ' '.join( id )
        page_metas[line]["Attribution"].add(epoch)
        page_metas[line]["SMTP Domain"].add('[[%s]]' % domain)
        page_metas[line]["SMTP Local Part"].add(local)
        page_metas[line]["See Also"].add('[[%s]]' % sname)

def import_metas( collab, metas, template, verbose ):
    for page, pmeta in metas.iteritems():
        status = collab.setMeta( page, pmeta, template=template, replace=True )
        if verbose:
            print status

def main():
    parser = optparse.OptionParser()
    parser.add_option( "-c", "--config",
        action="store",
        type="string", dest="config",
	default = None,
	metavar="CONFIG",
        help="CONFIG file path.")
    parser.add_option("-f", "--file",
                      dest="path",
                      default=None,
                      metavar="FILE",
                      help=("Input FILE path."))
    parser.add_option("-t", "--template",
                      dest="template",
                      default=None,
                      metavar="TEMPLATE",
                      help=("Wiki TEMPLATE."))
    parser.add_option("-u", "--url",
                      dest="url",
                      default=None,
                      metavar="COLLAB-URL",
                      help=("COLLAB-URL to connect to."))
    parser.add_option("-v", 
        action="store_true", dest="verbose", default=False,
        help="Enable verbose output." ) 
    parser.set_usage("%prog [options]")
    options, args = parser.parse_args()
    iopts={}
    if options.config:
        iopts = parse_config(options.config, "creds", "identity")
    if options.path:
        path = options.path
    elif options.config and "input-file" in iopts["identity"]:
        path = iopts["identity"]["input-file"]
    else:
        path = None
    if options.template:
        template = options.template
    elif options.config and "template" in iopts["identity"]:
        template = iopts["identity"]["template"]
    else:
        template = "IdentityTemplate"
    if options.url:
        url = options.url
        collab = CLIWiki(url)
    elif options.config and "url" in iopts["creds"]:
        url = iopts["creds"]["url"]
        collab = CLIWiki(url, config=options.config)
    else:
        parser.error("Collab URL needs to be specified. Use -h for help.")
    page_metas = Metas()
    if path is not None:
        if options.verbose:
            print "Parsing input file:", path
        parse_input_file(page_metas, path)
    else:
        parsr.error("Input file path needs to be specified.")
    if options.verbose:
        print "Uploading identities to collab:", url
    import_metas(collab, page_metas, template, options.verbose) 

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Script interrupted via CTRL-C."

